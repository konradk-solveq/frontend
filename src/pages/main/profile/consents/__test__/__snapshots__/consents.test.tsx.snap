// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Consents /> Rendering Should match snapshot 1`] = `
Array [
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "height": 148.88392857142858,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 1,
            },
            Object {
              "height": 148.88392857142858,
            },
            Object {
              "height": 148.88392857142858,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 20,
                "right": 20,
                "top": 10,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 61.594202898550726,
                "justifyContent": "center",
                "left": 54.34782608695652,
                "opacity": 1,
                "padding": 16.304347826086957,
                "position": "absolute",
                "width": 72.46376811594203,
                "zIndex": 20,
              }
            }
            testID="TopBackBtn"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="100%"
              bbWidth="100%"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
              vbHeight={16}
              vbWidth={20}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M7.293 1.147c.36.342.388.881.083 1.254l-.083.09-3.879 3.684H19l.117.006c.497.055.883.457.883.944 0 .525-.448.95-1 .95H3.414l3.879 3.685.083.09c.305.372.277.91-.083 1.253-.39.371-1.024.371-1.414 0L.293 7.797l-.083-.09c-.305-.372-.278-.911.083-1.254l5.586-5.306c.39-.371 1.023-.371 1.414 0z"
                  fill={4281413937}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0.8499999999999943,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <Text
            adjustsFontSizeToFit={false}
            style={
              Array [
                Object {
                  "color": "#333333",
                  "fontFamily": "DIN2014-Demi",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "lineHeight": 24,
                  "textAlign": "left",
                },
                undefined,
              ]
            }
            testID="header2-test-id"
          >
            Consents.header
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "width": "100%",
            },
            Object {
              "paddingTop": 181.15942028985506,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "height": "100%",
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Array [
                Object {
                  "padding": 14.888392857142858,
                  "position": "absolute",
                },
                Object {
                  "height": 443.32848373724494,
                  "width": 539.4345238095239,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "height": "100%",
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    undefined,
                  ]
                }
              >
                <RNCWebView
                  cacheEnabled={true}
                  injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                  injectedJavaScriptForMainFrameOnly={true}
                  javaScriptEnabled={true}
                  messagingEnabled={false}
                  onContentProcessDidTerminate={[Function]}
                  onHttpError={[Function]}
                  onLoadingError={[Function]}
                  onLoadingFinish={[Function]}
                  onLoadingProgress={[Function]}
                  onLoadingStart={[Function]}
                  onMessage={[Function]}
                  onShouldStartLoadWithRequest={[Function]}
                  scalesPageToFit={true}
                  scrollEnabled={false}
                  showsHorizontalScrollIndicator={false}
                  showsVerticalScrollIndicator={false}
                  source={
                    Object {
                      "html": "<!DOCTYPE html><html lang=\\"pl-PL\\"><head><meta http-equiv=\\"Content-Type\\" content=\\"text/html;  charset=utf-8\\"><meta name=\\"viewport\\" content=\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\" /><style>html,body,svg {margin:0;padding:0;height:100%;width:100%;overflow:hidden;background-color:transparent} svg{position:fixed}</style></head><body><svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 190 190\\">
<defs>
    <clipPath id=\\"clipPath\\">
        <polygon fill=\\"red\\" points=\\"\\">
            <animate attributeName=\\"points\\" begin=\\"0s\\" dur=\\"3s\\" repeatCount=\\"indefinite\\" values=\\"95,95 95.00,-105.00 95.00,-105.00 95.00,-105.00 95.00,-105.00 95.00,-105.00  ; 95,95 95.00,-105.00 129.73,-101.96 163.40,-92.94 195.00,-78.21 223.56,-58.21  ; 95,95 95.00,-105.00 163.40,-92.94 223.56,-58.21 268.21,-5.00 291.96,60.27  ; 95,95 95.00,-105.00 195.00,-78.21 268.21,-5.00 295.00,95.00 268.21,195.00  ; 95,95 95.00,-105.00 223.56,-58.21 291.96,60.27 268.21,195.00 163.40,282.94  ; 95,95 95.00,-105.00 248.21,-33.56 291.96,129.73 195.00,268.21 26.60,282.94  ; 95,95 95.00,-105.00 268.21,-5.00 268.21,195.00 95.00,295.00 -78.21,195.00  ; 95,95 95.00,-105.00 282.94,26.60 223.56,248.21 -5.00,268.21 -101.96,60.27  ; 95,95 95.00,-105.00 291.96,60.27 163.40,282.94 -78.21,195.00 -33.56,-58.21  ; 95,95 95.00,-105.00 295.00,95.00 95.00,295.00 -105.00,95.00 95.00,-105.00  ; 95,95 212.56,-66.80 273.20,185.80 33.20,285.21 -102.54,63.71 95.00,-105.00  ; 95,95 285.21,33.20 212.56,256.80 -22.56,256.80 -95.21,33.20 95.00,-105.00  ; 95,95 285.21,156.80 126.29,292.54 -66.80,212.56 -83.20,4.20 95.00,-105.00  ; 95,95 212.56,256.80 33.20,285.21 -95.21,156.80 -66.80,-22.56 95.00,-105.00  ; 95,95 95.00,295.00 -46.42,236.42 -105.00,95.00 -46.42,-46.42 95.00,-105.00  ; 95,95 -22.56,256.80 -95.21,156.80 -95.21,33.20 -22.56,-66.80 95.00,-105.00  ; 95,95 -95.21,156.80 -102.54,63.71 -66.80,-22.56 4.20,-83.20 95.00,-105.00  ; 95,95 -95.21,33.20 -66.80,-22.56 -22.56,-66.80 33.20,-95.21 95.00,-105.00  ; 95,95 -22.56,-66.80 4.20,-83.20 33.20,-95.21 63.71,-102.54 95.00,-105.00  ; 95,95 95.00,-105.00 95.00,-105.00 95.00,-105.00 95.00,-105.00 95.00,-105.00 \\"></animate>
        </polygon>
    </clipPath>
</defs>
<circle id=\\"c1\\" cx=\\"95\\" cy=\\"95\\" r=\\"93\\" fill=\\"none\\" stroke-dashoffset=\\"10.25\\"
stroke=\\"#66555555\\" stroke-width=\\"3\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"miter\\" stroke-dasharray=\\"9, 6\\">
</circle>
<circle id=\\"c2\\" cx=\\"95\\" cy=\\"95\\" r=\\"93\\" clip-path=\\"url(#clipPath)\\"  fill=\\"none\\" stroke-dashoffset=\\"10.25\\"
stroke= \\"#D8232A\\" stroke-width=\\"3\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"miter\\" stroke-dasharray=\\"9, 6\\" >
</circle>
</svg></body></html>",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "transparent",
                        "height": "100%",
                        "width": "100%",
                      },
                    ]
                  }
                  textInteractionEnabled={true}
                  useSharedProcessPool={true}
                  useWebKit={false}
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "height": 221.66424186862247,
                  "width": "20.219%",
                },
                undefined,
              ]
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="100%"
              bbWidth="100%"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
              vbHeight={34}
              vbWidth={44}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={4292354858}
                  fillRule={0}
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M27.59 21.29L38.285 7.507h-6.12c-.985 0-1.795.09-2.43.264-.63.181-1.168.404-1.608.668-.44.265-.817.557-1.131.884-.294.299-9.696 11.953-9.718 11.967l14.454 10.846c.314.174.636.362.95.55.314.195.692.369 1.132.529.44.16.978.285 1.614.396.635.105 1.439.154 2.424.154h6.126L27.59 21.29z"
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                  />
                  <RNSVGPath
                    d="M12.095 21.304L28.589 0H21.56c-1.125 0-2.054.104-2.78.306-.727.202-1.342.46-1.852.758-.503.306-.936.64-1.3 1.016C15.295 2.428.29 21.29.276 21.31l10.06 7.536c.363.194.726.41 1.09.626.362.222.796.424 1.299.605.502.18 1.124.334 1.85.452.72.119 1.656.181 2.781.181h7.028l-12.288-9.406z"
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Modal
          animationType="slide"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          presentationStyle="fullScreen"
          statusBarTranslucent={true}
          testID="ConsentsErrorModal"
          visible={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <RCTScrollView
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                  "justifyContent": "space-between",
                }
              }
              showsVerticalScrollIndicator={false}
            >
              <View>
                <View
                  style={
                    Object {
                      "flex": 1,
                      "justifyContent": "space-between",
                      "marginBottom": 96.77455357142858,
                      "marginHorizontal": 72.46376811594203,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "marginBottom": 44.66517857142858,
                        },
                        Object {
                          "marginTop": 205.45982142857144,
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#d8232a",
                          "fontFamily": "DIN2014Narrow-Regular",
                          "fontSize": 40,
                          "paddingVertical": 7.444196428571429,
                          "textAlign": "center",
                        }
                      }
                    >
                      PublishThankYouPage.errorTitle
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "paddingHorizontal": 60,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RNSVGSvgView
                        bbHeight={296}
                        bbWidth={746.3768115942029}
                        focusable={false}
                        height={296}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": 296,
                              "width": 746,
                            },
                          ]
                        }
                        width={746.3768115942029}
                      >
                        <RNSVGGroup>
                          <View
                            pointerEvents="none"
                            style={
                              Array [
                                Object {
                                  "height": 296,
                                },
                                Object {
                                  "width": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "height": "100%",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                      "overflow": "hidden",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <RNCWebView
                                  cacheEnabled={true}
                                  injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                                  injectedJavaScriptForMainFrameOnly={true}
                                  javaScriptEnabled={true}
                                  messagingEnabled={false}
                                  onContentProcessDidTerminate={[Function]}
                                  onHttpError={[Function]}
                                  onLoadingError={[Function]}
                                  onLoadingFinish={[Function]}
                                  onLoadingProgress={[Function]}
                                  onLoadingStart={[Function]}
                                  onMessage={[Function]}
                                  onShouldStartLoadWithRequest={[Function]}
                                  scalesPageToFit={true}
                                  scrollEnabled={false}
                                  showsHorizontalScrollIndicator={false}
                                  showsVerticalScrollIndicator={false}
                                  source={
                                    Object {
                                      "html": "<!DOCTYPE html><html lang=\\"pl-PL\\"><head><meta http-equiv=\\"Content-Type\\" content=\\"text/html;  charset=utf-8\\"><meta name=\\"viewport\\" content=\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\" /><style>html,body,svg {margin:0;padding:0;height:100%;width:100%;overflow:hidden;background-color:transparent} svg{position:fixed}</style></head><body><svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 412 296\\" width=\\"412\\" height=\\"296\\">
        <path d=\\"M 0.281 185.032 C 13.009 193.348 24.104 191.533 28.385 188.148 C 31.313 185.833 35.779 177.272 36.793 174.086 C 45.715 146.049 44.235 151.648 49.652 141.394 C 54.543 132.136 66.483 125.605 67.899 124.992 C 71.369 123.491 77.05 121.621 78.311 121.399 C 94.461 118.55 101.526 120.072 103.301 120.195 C 113.547 120.906 114.785 121.95 118.623 122.857 C 125.272 124.428 125.716 124.285 132.814 124.79 C 135.22 124.961 140.562 124.621 141.654 124.479 C 149.359 123.476 154.975 121.279 162.474 116.227 C 175.476 107.468 186.426 97.398 197.223 87.021 C 210.853 73.922 227.158 63.132 245.026 55.524 C 251.321 52.844 268.752 48.49 275.443 48.103 C 280.139 47.831 285.49 47.654 290.53 47.704 C 294.89 47.748 309.528 50.602 314.581 52.61 C 323.111 55.999 326.472 58.316 333.401 63 C 338.506 66.451 344.778 72.659 347.455 76.092 C 349.21 78.343 356.243 87.049 355.857 86.885 C 357.871 89.388 358.57 93.115 360.166 96.844 C 363.727 105.162 364.291 115.88 364.861 126.599 C 365.26 134.098 359.781 159.033 357.859 166.393 C 348.283 203.063 348.467 194.666 347.617 223.735 C 347.468 228.838 349.217 237.703 349.812 238.892 C 350.68 240.627 359.64 262.771 370.351 270.495 C 371.966 271.66 380.373 276.164 382.22 276.505 C 389.248 277.804 391.34 277.24 396.96 276.287 C 400.101 275.754 401.923 274.913 404.685 273.165 C 410.689 269.365 410.438 269.158 412.272 265.457 C 412.623 264.749 414.036 267.232 413.366 266.562 C 410.726 263.922 416.083 269.107 411.939 265.999\\" stroke=\\"#D8232A\\" fill=\\"none\\" 
        fill-rule=\\"evenodd\\" stroke-dasharray=\\"6 9\\" stroke-linecap=\\"round\\">
            <animate attributeName=\\"stroke-dashoffset\\" dur=\\"100s\\" repeatCount=\\"indefinite\\" values=\\"0 ; -1000\\"/>
        </path>
    </svg></body></html>",
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "backgroundColor": "#ffffff",
                                      },
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": "100%",
                                        "width": "100%",
                                      },
                                    ]
                                  }
                                  textInteractionEnabled={true}
                                  useSharedProcessPool={true}
                                  useWebKit={false}
                                />
                              </View>
                            </View>
                          </View>
                          <RNSVGPath
                            d="M196.657 0h10.686c79.182 0 143.372 66.262 143.372 148s-64.19 148-143.372 148h-10.686c-79.182 0-143.372-66.262-143.372-148S117.475 0 196.657 0z"
                            fill={4294344323}
                            opacity={0.2}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                      <RNSVGSvgView
                        bbHeight={296}
                        bbWidth={746.3768115942029}
                        focusable={false}
                        height={296}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "position": "absolute",
                            },
                            Object {
                              "flex": 0,
                              "height": 296,
                              "width": 746,
                            },
                          ]
                        }
                        width={746.3768115942029}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={4294344323}
                          >
                            <RNSVGPath
                              d="M128.235 106.711l-24.688 81.222 150.467 46.829 34.005-98.588-60.203-106.681z"
                              fill={4294967295}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            />
                            <RNSVGPath
                              d="M128.145 105.5l159.768 32"
                              propList={
                                Array [
                                  "strokeLinecap",
                                ]
                              }
                              strokeLinecap={2}
                            />
                            <RNSVGPath
                              d="M103.547 187.933c26.316-15.127 44.658-24.308 55.025-27.541 15.09-4.707 25.485-5.336 37.21-1.887 10.744 3.16 18.582 10.07 27.534 20.729 7.259 8.642 17.491 27.151 30.698 55.528"
                            />
                            <RNSVGPath
                              d="M128.145 107.5l35.169 51M286.909 137.5l-69.333 36"
                              propList={
                                Array [
                                  "strokeLinecap",
                                ]
                              }
                              strokeLinecap={2}
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "marginBottom": 160.79464285714286,
                        "marginTop": 29.776785714285715,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#414141",
                          "fontFamily": "DIN2014Narrow-Light",
                          "fontSize": 23,
                        }
                      }
                      testID="ConsentsErrorModalMessage"
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "marginTop": 74.44196428571429,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": 50,
                          },
                          Object {
                            "marginTop": 44.66517857142858,
                          },
                        ]
                      }
                    >
                      <RNGestureHandlerButton
                        collapsable={false}
                        onGestureEvent={[Function]}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        onHandlerStateChange={[Function]}
                        rippleColor={0}
                        testID="big-red-btn"
                      >
                        <View
                          accessible={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#d8232a",
                              "borderRadius": 50,
                              "display": "flex",
                              "height": "100%",
                              "justifyContent": "center",
                              "opacity": 1,
                              "width": "100%",
                            }
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "white",
                                  "fontFamily": "DIN2014Narrow-Bold",
                                  "fontSize": 20,
                                  "textAlign": "center",
                                },
                                undefined,
                              ]
                            }
                          >
                            PUBLISHTHANKYOUPAGE.OKBTN
                          </Text>
                        </View>
                      </RNGestureHandlerButton>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </Modal>
      </View>
    </View>
  </View>,
  <View
    style={
      Array [
        Object {
          "position": "absolute",
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      nativeID="animatedComponent"
      style={
        Object {
          "backgroundColor": "#313131",
          "bottom": 0,
          "height": 0,
          "justifyContent": "flex-end",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": "100%",
          "zIndex": 1000,
        }
      }
    >
      <Text
        collapsable={false}
        nativeID="animatedComponent"
        numberOfLines={1}
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "DIN2014Narrow-Regular",
            "fontSize": 13,
            "letterSpacing": 0.4,
            "opacity": 0,
            "paddingBottom": 7.444196428571429,
            "paddingHorizontal": 36.231884057971016,
            "textAlign": "center",
          }
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`<Consents /> Rendering Should save consents successfully on save button press 1`] = `
Array [
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "height": 148.88392857142858,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 1,
            },
            Object {
              "height": 148.88392857142858,
            },
            Object {
              "height": 148.88392857142858,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 20,
                "right": 20,
                "top": 10,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 61.594202898550726,
                "justifyContent": "center",
                "left": 54.34782608695652,
                "opacity": 1,
                "padding": 16.304347826086957,
                "position": "absolute",
                "width": 72.46376811594203,
                "zIndex": 20,
              }
            }
            testID="TopBackBtn"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="100%"
              bbWidth="100%"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
              vbHeight={16}
              vbWidth={20}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M7.293 1.147c.36.342.388.881.083 1.254l-.083.09-3.879 3.684H19l.117.006c.497.055.883.457.883.944 0 .525-.448.95-1 .95H3.414l3.879 3.685.083.09c.305.372.277.91-.083 1.253-.39.371-1.024.371-1.414 0L.293 7.797l-.083-.09c-.305-.372-.278-.911.083-1.254l5.586-5.306c.39-.371 1.023-.371 1.414 0z"
                  fill={4281413937}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0.8499999999999943,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <Text
            adjustsFontSizeToFit={false}
            style={
              Array [
                Object {
                  "color": "#333333",
                  "fontFamily": "DIN2014-Demi",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "lineHeight": 24,
                  "textAlign": "left",
                },
                undefined,
              ]
            }
            testID="header2-test-id"
          >
            Consents.header
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "width": "100%",
            },
            Object {
              "paddingTop": 181.15942028985506,
            },
          ]
        }
      >
        <RCTScrollView
          keyboardShouldPersistTaps="handled"
          showsVerticalScrollIndicator={false}
        >
          <View>
            <View
              style={
                Object {
                  "marginHorizontal": 72.46376811594203,
                  "marginTop": 14.888392857142858,
                  "paddingBottom": 66.99776785714286,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 65.50892857142857,
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 47.10144927536232,
                      "position": "relative",
                      "width": 47.10144927536232,
                    }
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                          Object {
                            "position": "absolute",
                          },
                        ]
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight="100%"
                        bbWidth="100%"
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": "100%",
                              "width": "100%",
                            },
                          ]
                        }
                        vbHeight={27}
                        vbWidth={26}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            fill={null}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0.38599999999996726,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={4281413937}
                          >
                            <RNSVGRect
                              height="25.232"
                              rx="4"
                              width="25"
                              x=".5"
                              y=".5"
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "maxWidth": 557.9710144927536,
                      "paddingHorizontal": 10,
                      "paddingTop": 4.466517857142858,
                    }
                  }
                >
                  <Text>
                    Login.selectAll
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 16.377232142857142,
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 47.10144927536232,
                      "position": "relative",
                      "width": 47.10144927536232,
                    }
                  }
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                          Object {
                            "position": "absolute",
                          },
                        ]
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight="100%"
                        bbWidth="100%"
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": "100%",
                              "width": "100%",
                            },
                          ]
                        }
                        vbHeight={27}
                        vbWidth={26}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            fill={null}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0.38599999999996726,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={4281413937}
                          >
                            <RNSVGRect
                              height="25.232"
                              rx="4"
                              width="25"
                              x=".5"
                              y=".5"
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "maxWidth": 557.9710144927536,
                      "paddingHorizontal": 10,
                      "paddingTop": 4.466517857142858,
                    }
                  }
                >
                  <Text>
                    testowa zgoda
                  </Text>
                  <View
                    style={
                      Array [
                        Object {},
                        undefined,
                        undefined,
                      ]
                    }
                    testID="html"
                  >
                    <View
                      style={
                        Array [
                          Object {},
                          undefined,
                          undefined,
                        ]
                      }
                      testID="body"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "marginBottom": 14,
                              "marginTop": 14,
                            },
                            undefined,
                            undefined,
                          ]
                        }
                        testID="p"
                      >
                        <Text
                          allowFontScaling={true}
                          selectable={false}
                          style={
                            Array [
                              Object {
                                "fontSize": 14,
                                "textAlign": "justify",
                              },
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          OK
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": 50,
                    "marginTop": 44.66517857142858,
                  }
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                  testID="ConsentsPostBtn"
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#d8232a",
                        "borderRadius": 50,
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontFamily": "DIN2014Narrow-Bold",
                            "fontSize": 20,
                            "textAlign": "center",
                          },
                          undefined,
                        ]
                      }
                    >
                      CONSENTS.BUTTON
                    </Text>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
          </View>
        </RCTScrollView>
        <Modal
          animationType="slide"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          presentationStyle="fullScreen"
          statusBarTranslucent={true}
          testID="ConsentsErrorModal"
          visible={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <RCTScrollView
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                  "justifyContent": "space-between",
                }
              }
              showsVerticalScrollIndicator={false}
            >
              <View>
                <View
                  style={
                    Object {
                      "flex": 1,
                      "justifyContent": "space-between",
                      "marginBottom": 96.77455357142858,
                      "marginHorizontal": 72.46376811594203,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "marginBottom": 44.66517857142858,
                        },
                        Object {
                          "marginTop": 205.45982142857144,
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#d8232a",
                          "fontFamily": "DIN2014Narrow-Regular",
                          "fontSize": 40,
                          "paddingVertical": 7.444196428571429,
                          "textAlign": "center",
                        }
                      }
                    >
                      PublishThankYouPage.errorTitle
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "paddingHorizontal": 60,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RNSVGSvgView
                        bbHeight={296}
                        bbWidth={746.3768115942029}
                        focusable={false}
                        height={296}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": 296,
                              "width": 746,
                            },
                          ]
                        }
                        width={746.3768115942029}
                      >
                        <RNSVGGroup>
                          <View
                            pointerEvents="none"
                            style={
                              Array [
                                Object {
                                  "height": 296,
                                },
                                Object {
                                  "width": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "height": "100%",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                      "overflow": "hidden",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <RNCWebView
                                  cacheEnabled={true}
                                  injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                                  injectedJavaScriptForMainFrameOnly={true}
                                  javaScriptEnabled={true}
                                  messagingEnabled={false}
                                  onContentProcessDidTerminate={[Function]}
                                  onHttpError={[Function]}
                                  onLoadingError={[Function]}
                                  onLoadingFinish={[Function]}
                                  onLoadingProgress={[Function]}
                                  onLoadingStart={[Function]}
                                  onMessage={[Function]}
                                  onShouldStartLoadWithRequest={[Function]}
                                  scalesPageToFit={true}
                                  scrollEnabled={false}
                                  showsHorizontalScrollIndicator={false}
                                  showsVerticalScrollIndicator={false}
                                  source={
                                    Object {
                                      "html": "<!DOCTYPE html><html lang=\\"pl-PL\\"><head><meta http-equiv=\\"Content-Type\\" content=\\"text/html;  charset=utf-8\\"><meta name=\\"viewport\\" content=\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\" /><style>html,body,svg {margin:0;padding:0;height:100%;width:100%;overflow:hidden;background-color:transparent} svg{position:fixed}</style></head><body><svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 412 296\\" width=\\"412\\" height=\\"296\\">
        <path d=\\"M 0.281 185.032 C 13.009 193.348 24.104 191.533 28.385 188.148 C 31.313 185.833 35.779 177.272 36.793 174.086 C 45.715 146.049 44.235 151.648 49.652 141.394 C 54.543 132.136 66.483 125.605 67.899 124.992 C 71.369 123.491 77.05 121.621 78.311 121.399 C 94.461 118.55 101.526 120.072 103.301 120.195 C 113.547 120.906 114.785 121.95 118.623 122.857 C 125.272 124.428 125.716 124.285 132.814 124.79 C 135.22 124.961 140.562 124.621 141.654 124.479 C 149.359 123.476 154.975 121.279 162.474 116.227 C 175.476 107.468 186.426 97.398 197.223 87.021 C 210.853 73.922 227.158 63.132 245.026 55.524 C 251.321 52.844 268.752 48.49 275.443 48.103 C 280.139 47.831 285.49 47.654 290.53 47.704 C 294.89 47.748 309.528 50.602 314.581 52.61 C 323.111 55.999 326.472 58.316 333.401 63 C 338.506 66.451 344.778 72.659 347.455 76.092 C 349.21 78.343 356.243 87.049 355.857 86.885 C 357.871 89.388 358.57 93.115 360.166 96.844 C 363.727 105.162 364.291 115.88 364.861 126.599 C 365.26 134.098 359.781 159.033 357.859 166.393 C 348.283 203.063 348.467 194.666 347.617 223.735 C 347.468 228.838 349.217 237.703 349.812 238.892 C 350.68 240.627 359.64 262.771 370.351 270.495 C 371.966 271.66 380.373 276.164 382.22 276.505 C 389.248 277.804 391.34 277.24 396.96 276.287 C 400.101 275.754 401.923 274.913 404.685 273.165 C 410.689 269.365 410.438 269.158 412.272 265.457 C 412.623 264.749 414.036 267.232 413.366 266.562 C 410.726 263.922 416.083 269.107 411.939 265.999\\" stroke=\\"#D8232A\\" fill=\\"none\\" 
        fill-rule=\\"evenodd\\" stroke-dasharray=\\"6 9\\" stroke-linecap=\\"round\\">
            <animate attributeName=\\"stroke-dashoffset\\" dur=\\"100s\\" repeatCount=\\"indefinite\\" values=\\"0 ; -1000\\"/>
        </path>
    </svg></body></html>",
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "backgroundColor": "#ffffff",
                                      },
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": "100%",
                                        "width": "100%",
                                      },
                                    ]
                                  }
                                  textInteractionEnabled={true}
                                  useSharedProcessPool={true}
                                  useWebKit={false}
                                />
                              </View>
                            </View>
                          </View>
                          <RNSVGPath
                            d="M196.657 0h10.686c79.182 0 143.372 66.262 143.372 148s-64.19 148-143.372 148h-10.686c-79.182 0-143.372-66.262-143.372-148S117.475 0 196.657 0z"
                            fill={4294344323}
                            opacity={0.2}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                      <RNSVGSvgView
                        bbHeight={296}
                        bbWidth={746.3768115942029}
                        focusable={false}
                        height={296}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "position": "absolute",
                            },
                            Object {
                              "flex": 0,
                              "height": 296,
                              "width": 746,
                            },
                          ]
                        }
                        width={746.3768115942029}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={4294344323}
                          >
                            <RNSVGPath
                              d="M128.235 106.711l-24.688 81.222 150.467 46.829 34.005-98.588-60.203-106.681z"
                              fill={4294967295}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            />
                            <RNSVGPath
                              d="M128.145 105.5l159.768 32"
                              propList={
                                Array [
                                  "strokeLinecap",
                                ]
                              }
                              strokeLinecap={2}
                            />
                            <RNSVGPath
                              d="M103.547 187.933c26.316-15.127 44.658-24.308 55.025-27.541 15.09-4.707 25.485-5.336 37.21-1.887 10.744 3.16 18.582 10.07 27.534 20.729 7.259 8.642 17.491 27.151 30.698 55.528"
                            />
                            <RNSVGPath
                              d="M128.145 107.5l35.169 51M286.909 137.5l-69.333 36"
                              propList={
                                Array [
                                  "strokeLinecap",
                                ]
                              }
                              strokeLinecap={2}
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "marginBottom": 160.79464285714286,
                        "marginTop": 29.776785714285715,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#414141",
                          "fontFamily": "DIN2014Narrow-Light",
                          "fontSize": 23,
                        }
                      }
                      testID="ConsentsErrorModalMessage"
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "marginTop": 74.44196428571429,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": 50,
                          },
                          Object {
                            "marginTop": 44.66517857142858,
                          },
                        ]
                      }
                    >
                      <RNGestureHandlerButton
                        collapsable={false}
                        onGestureEvent={[Function]}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        onHandlerStateChange={[Function]}
                        rippleColor={0}
                        testID="big-red-btn"
                      >
                        <View
                          accessible={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#d8232a",
                              "borderRadius": 50,
                              "display": "flex",
                              "height": "100%",
                              "justifyContent": "center",
                              "opacity": 1,
                              "width": "100%",
                            }
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "white",
                                  "fontFamily": "DIN2014Narrow-Bold",
                                  "fontSize": 20,
                                  "textAlign": "center",
                                },
                                undefined,
                              ]
                            }
                          >
                            PUBLISHTHANKYOUPAGE.OKBTN
                          </Text>
                        </View>
                      </RNGestureHandlerButton>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </Modal>
      </View>
    </View>
  </View>,
  <View
    style={
      Array [
        Object {
          "position": "absolute",
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      nativeID="animatedComponent"
      style={
        Object {
          "backgroundColor": "#313131",
          "bottom": 0,
          "height": 0,
          "justifyContent": "flex-end",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": "100%",
          "zIndex": 1000,
        }
      }
    >
      <Text
        collapsable={false}
        nativeID="animatedComponent"
        numberOfLines={1}
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "DIN2014Narrow-Regular",
            "fontSize": 13,
            "letterSpacing": 0.4,
            "opacity": 0,
            "paddingBottom": 7.444196428571429,
            "paddingHorizontal": 36.231884057971016,
            "textAlign": "center",
          }
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`<Consents /> Rendering Should show error message if api responded with an error after a save button press 1`] = `
Array [
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "height": 148.88392857142858,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 1,
            },
            Object {
              "height": 148.88392857142858,
            },
            Object {
              "height": 148.88392857142858,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 20,
                "right": 20,
                "top": 10,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 61.594202898550726,
                "justifyContent": "center",
                "left": 54.34782608695652,
                "opacity": 1,
                "padding": 16.304347826086957,
                "position": "absolute",
                "width": 72.46376811594203,
                "zIndex": 20,
              }
            }
            testID="TopBackBtn"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="100%"
              bbWidth="100%"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
              vbHeight={16}
              vbWidth={20}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M7.293 1.147c.36.342.388.881.083 1.254l-.083.09-3.879 3.684H19l.117.006c.497.055.883.457.883.944 0 .525-.448.95-1 .95H3.414l3.879 3.685.083.09c.305.372.277.91-.083 1.253-.39.371-1.024.371-1.414 0L.293 7.797l-.083-.09c-.305-.372-.278-.911.083-1.254l5.586-5.306c.39-.371 1.023-.371 1.414 0z"
                  fill={4281413937}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0.8499999999999943,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <Text
            adjustsFontSizeToFit={false}
            style={
              Array [
                Object {
                  "color": "#333333",
                  "fontFamily": "DIN2014-Demi",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "lineHeight": 24,
                  "textAlign": "left",
                },
                undefined,
              ]
            }
            testID="header2-test-id"
          >
            Consents.header
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "width": "100%",
            },
            Object {
              "paddingTop": 181.15942028985506,
            },
          ]
        }
      >
        <RCTScrollView
          keyboardShouldPersistTaps="handled"
          showsVerticalScrollIndicator={false}
        >
          <View>
            <View
              style={
                Object {
                  "marginHorizontal": 72.46376811594203,
                  "marginTop": 14.888392857142858,
                  "paddingBottom": 66.99776785714286,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 65.50892857142857,
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 47.10144927536232,
                      "position": "relative",
                      "width": 47.10144927536232,
                    }
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                          Object {
                            "position": "absolute",
                          },
                        ]
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight="100%"
                        bbWidth="100%"
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": "100%",
                              "width": "100%",
                            },
                          ]
                        }
                        vbHeight={27}
                        vbWidth={26}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            fill={null}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0.38599999999996726,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={4281413937}
                          >
                            <RNSVGRect
                              height="25.232"
                              rx="4"
                              width="25"
                              x=".5"
                              y=".5"
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "maxWidth": 557.9710144927536,
                      "paddingHorizontal": 10,
                      "paddingTop": 4.466517857142858,
                    }
                  }
                >
                  <Text>
                    Login.selectAll
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "row",
                    "marginBottom": 16.377232142857142,
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 47.10144927536232,
                      "position": "relative",
                      "width": 47.10144927536232,
                    }
                  }
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                          Object {
                            "position": "absolute",
                          },
                        ]
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight="100%"
                        bbWidth="100%"
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": "100%",
                              "width": "100%",
                            },
                          ]
                        }
                        vbHeight={27}
                        vbWidth={26}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            fill={null}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0.38599999999996726,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={4281413937}
                          >
                            <RNSVGRect
                              height="25.232"
                              rx="4"
                              width="25"
                              x=".5"
                              y=".5"
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "height": "100%",
                            "width": "100%",
                          },
                          Object {
                            "justifyContent": "center",
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "maxWidth": 557.9710144927536,
                      "paddingHorizontal": 10,
                      "paddingTop": 4.466517857142858,
                    }
                  }
                >
                  <Text>
                    testowa zgoda
                  </Text>
                  <View
                    style={
                      Array [
                        Object {},
                        undefined,
                        undefined,
                      ]
                    }
                    testID="html"
                  >
                    <View
                      style={
                        Array [
                          Object {},
                          undefined,
                          undefined,
                        ]
                      }
                      testID="body"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "marginBottom": 14,
                              "marginTop": 14,
                            },
                            undefined,
                            undefined,
                          ]
                        }
                        testID="p"
                      >
                        <Text
                          allowFontScaling={true}
                          selectable={false}
                          style={
                            Array [
                              Object {
                                "fontSize": 14,
                                "textAlign": "justify",
                              },
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          OK
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": 50,
                    "marginTop": 44.66517857142858,
                  }
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                  testID="ConsentsPostBtn"
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#d8232a",
                        "borderRadius": 50,
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontFamily": "DIN2014Narrow-Bold",
                            "fontSize": 20,
                            "textAlign": "center",
                          },
                          undefined,
                        ]
                      }
                    >
                      CONSENTS.BUTTON
                    </Text>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
          </View>
        </RCTScrollView>
        <Modal
          animationType="slide"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          presentationStyle="fullScreen"
          statusBarTranslucent={true}
          testID="ConsentsErrorModal"
          visible={true}
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <RCTScrollView
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                  "justifyContent": "space-between",
                }
              }
              showsVerticalScrollIndicator={false}
            >
              <View>
                <View
                  style={
                    Object {
                      "flex": 1,
                      "justifyContent": "space-between",
                      "marginBottom": 96.77455357142858,
                      "marginHorizontal": 72.46376811594203,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "marginBottom": 44.66517857142858,
                        },
                        Object {
                          "marginTop": 205.45982142857144,
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#d8232a",
                          "fontFamily": "DIN2014Narrow-Regular",
                          "fontSize": 40,
                          "paddingVertical": 7.444196428571429,
                          "textAlign": "center",
                        }
                      }
                    >
                      PublishThankYouPage.errorTitle
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "paddingHorizontal": 60,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RNSVGSvgView
                        bbHeight={296}
                        bbWidth={746.3768115942029}
                        focusable={false}
                        height={296}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "flex": 0,
                              "height": 296,
                              "width": 746,
                            },
                          ]
                        }
                        width={746.3768115942029}
                      >
                        <RNSVGGroup>
                          <View
                            pointerEvents="none"
                            style={
                              Array [
                                Object {
                                  "height": 296,
                                },
                                Object {
                                  "width": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "height": "100%",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                      "overflow": "hidden",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <RNCWebView
                                  cacheEnabled={true}
                                  injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                                  injectedJavaScriptForMainFrameOnly={true}
                                  javaScriptEnabled={true}
                                  messagingEnabled={false}
                                  onContentProcessDidTerminate={[Function]}
                                  onHttpError={[Function]}
                                  onLoadingError={[Function]}
                                  onLoadingFinish={[Function]}
                                  onLoadingProgress={[Function]}
                                  onLoadingStart={[Function]}
                                  onMessage={[Function]}
                                  onShouldStartLoadWithRequest={[Function]}
                                  scalesPageToFit={true}
                                  scrollEnabled={false}
                                  showsHorizontalScrollIndicator={false}
                                  showsVerticalScrollIndicator={false}
                                  source={
                                    Object {
                                      "html": "<!DOCTYPE html><html lang=\\"pl-PL\\"><head><meta http-equiv=\\"Content-Type\\" content=\\"text/html;  charset=utf-8\\"><meta name=\\"viewport\\" content=\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\" /><style>html,body,svg {margin:0;padding:0;height:100%;width:100%;overflow:hidden;background-color:transparent} svg{position:fixed}</style></head><body><svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 412 296\\" width=\\"412\\" height=\\"296\\">
        <path d=\\"M 0.281 185.032 C 13.009 193.348 24.104 191.533 28.385 188.148 C 31.313 185.833 35.779 177.272 36.793 174.086 C 45.715 146.049 44.235 151.648 49.652 141.394 C 54.543 132.136 66.483 125.605 67.899 124.992 C 71.369 123.491 77.05 121.621 78.311 121.399 C 94.461 118.55 101.526 120.072 103.301 120.195 C 113.547 120.906 114.785 121.95 118.623 122.857 C 125.272 124.428 125.716 124.285 132.814 124.79 C 135.22 124.961 140.562 124.621 141.654 124.479 C 149.359 123.476 154.975 121.279 162.474 116.227 C 175.476 107.468 186.426 97.398 197.223 87.021 C 210.853 73.922 227.158 63.132 245.026 55.524 C 251.321 52.844 268.752 48.49 275.443 48.103 C 280.139 47.831 285.49 47.654 290.53 47.704 C 294.89 47.748 309.528 50.602 314.581 52.61 C 323.111 55.999 326.472 58.316 333.401 63 C 338.506 66.451 344.778 72.659 347.455 76.092 C 349.21 78.343 356.243 87.049 355.857 86.885 C 357.871 89.388 358.57 93.115 360.166 96.844 C 363.727 105.162 364.291 115.88 364.861 126.599 C 365.26 134.098 359.781 159.033 357.859 166.393 C 348.283 203.063 348.467 194.666 347.617 223.735 C 347.468 228.838 349.217 237.703 349.812 238.892 C 350.68 240.627 359.64 262.771 370.351 270.495 C 371.966 271.66 380.373 276.164 382.22 276.505 C 389.248 277.804 391.34 277.24 396.96 276.287 C 400.101 275.754 401.923 274.913 404.685 273.165 C 410.689 269.365 410.438 269.158 412.272 265.457 C 412.623 264.749 414.036 267.232 413.366 266.562 C 410.726 263.922 416.083 269.107 411.939 265.999\\" stroke=\\"#D8232A\\" fill=\\"none\\" 
        fill-rule=\\"evenodd\\" stroke-dasharray=\\"6 9\\" stroke-linecap=\\"round\\">
            <animate attributeName=\\"stroke-dashoffset\\" dur=\\"100s\\" repeatCount=\\"indefinite\\" values=\\"0 ; -1000\\"/>
        </path>
    </svg></body></html>",
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "backgroundColor": "#ffffff",
                                      },
                                      Object {
                                        "backgroundColor": "transparent",
                                        "height": "100%",
                                        "width": "100%",
                                      },
                                    ]
                                  }
                                  textInteractionEnabled={true}
                                  useSharedProcessPool={true}
                                  useWebKit={false}
                                />
                              </View>
                            </View>
                          </View>
                          <RNSVGPath
                            d="M196.657 0h10.686c79.182 0 143.372 66.262 143.372 148s-64.19 148-143.372 148h-10.686c-79.182 0-143.372-66.262-143.372-148S117.475 0 196.657 0z"
                            fill={4294344323}
                            opacity={0.2}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                      <RNSVGSvgView
                        bbHeight={296}
                        bbWidth={746.3768115942029}
                        focusable={false}
                        height={296}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Object {
                              "position": "absolute",
                            },
                            Object {
                              "flex": 0,
                              "height": 296,
                              "width": 746,
                            },
                          ]
                        }
                        width={746.3768115942029}
                      >
                        <RNSVGGroup>
                          <RNSVGGroup
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={4294344323}
                          >
                            <RNSVGPath
                              d="M128.235 106.711l-24.688 81.222 150.467 46.829 34.005-98.588-60.203-106.681z"
                              fill={4294967295}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            />
                            <RNSVGPath
                              d="M128.145 105.5l159.768 32"
                              propList={
                                Array [
                                  "strokeLinecap",
                                ]
                              }
                              strokeLinecap={2}
                            />
                            <RNSVGPath
                              d="M103.547 187.933c26.316-15.127 44.658-24.308 55.025-27.541 15.09-4.707 25.485-5.336 37.21-1.887 10.744 3.16 18.582 10.07 27.534 20.729 7.259 8.642 17.491 27.151 30.698 55.528"
                            />
                            <RNSVGPath
                              d="M128.145 107.5l35.169 51M286.909 137.5l-69.333 36"
                              propList={
                                Array [
                                  "strokeLinecap",
                                ]
                              }
                              strokeLinecap={2}
                            />
                          </RNSVGGroup>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "marginBottom": 160.79464285714286,
                        "marginTop": 29.776785714285715,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#414141",
                          "fontFamily": "DIN2014Narrow-Light",
                          "fontSize": 23,
                        }
                      }
                      testID="ConsentsErrorModalMessage"
                    >
                      Test error message.
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "marginTop": 74.44196428571429,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "height": 50,
                          },
                          Object {
                            "marginTop": 44.66517857142858,
                          },
                        ]
                      }
                    >
                      <RNGestureHandlerButton
                        collapsable={false}
                        onGestureEvent={[Function]}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        onHandlerStateChange={[Function]}
                        rippleColor={0}
                        testID="big-red-btn"
                      >
                        <View
                          accessible={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#d8232a",
                              "borderRadius": 50,
                              "display": "flex",
                              "height": "100%",
                              "justifyContent": "center",
                              "opacity": 1,
                              "width": "100%",
                            }
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "white",
                                  "fontFamily": "DIN2014Narrow-Bold",
                                  "fontSize": 20,
                                  "textAlign": "center",
                                },
                                undefined,
                              ]
                            }
                          >
                            PUBLISHTHANKYOUPAGE.OKBTN
                          </Text>
                        </View>
                      </RNGestureHandlerButton>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </Modal>
      </View>
    </View>
  </View>,
  <View
    style={
      Array [
        Object {
          "position": "absolute",
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      nativeID="animatedComponent"
      style={
        Object {
          "backgroundColor": "#313131",
          "bottom": 0,
          "height": 0,
          "justifyContent": "flex-end",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": "100%",
          "zIndex": 1000,
        }
      }
    >
      <Text
        collapsable={false}
        nativeID="animatedComponent"
        numberOfLines={1}
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "DIN2014Narrow-Regular",
            "fontSize": 13,
            "letterSpacing": 0.4,
            "opacity": 0,
            "paddingBottom": 7.444196428571429,
            "paddingHorizontal": 36.231884057971016,
            "textAlign": "center",
          }
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

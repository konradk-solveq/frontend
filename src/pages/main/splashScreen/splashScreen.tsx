import React, {useEffect, useState} from 'react';
import {StyleSheet, Dimensions, View, StatusBar} from 'react-native';
import AnimSvg from '@helpers/animSvg';
import {useAppDispatch, useAppSelector} from '@hooks/redux';

import {
    setObjSize,
    getStandardPx,
    getVerticalPx,
    getWidthPx,
    getRelativeHeight,
} from '@helpers/layoutFoo';
import {TermsAndConditionsType} from '@models/regulations.model';
import {setAppCurrentTerms} from '@storage/actions';
import {RegularStackRoute, BothStackRoute} from '@navigation/route';
import {getIsNewVersion} from '@helpers/appVersion';
import {SplashScreenRouteT} from '@type/rootStack';
import {KrossLogoSvg} from '@components/svg';

const {width, height} = Dimensions.get('window');

interface Props {
    navigation: any;
    route: SplashScreenRouteT;
}

const time = __DEV__ ? 100 : 3000;

const SplashScreen: React.FC<Props> = (props: Props) => {
    const data = useAppSelector<TermsAndConditionsType>(
        state => state.app.terms?.[state.app?.terms?.length - 1],
    );
    const currentVersion = useAppSelector<string>(
        state => state.app.currentTerms.version,
    );
    const isLoading = useAppSelector<boolean>(state => state.app.sync);
    const showed = useAppSelector<number>(state => state.app.showedRegulations);
    const [showNewRegulations, setShowNewRegulations] = useState<boolean>();
    const [showNewAppVersion, setShowNewAppVersion] = useState<boolean>(false);
    const dispatch = useAppDispatch();

    const shopAppVersion = useAppSelector<string>(
        state => state.app.config.version,
    );
    const showedNewAppVersion = useAppSelector<string>(
        state => state.app.showedNewAppVersion,
    );

    useEffect(() => {
        if (data) {
            const now = Date.now();
            const showDate = data.showDate ? Date.parse(data.showDate) : 0;
            const publishDate = data?.publishDate
                ? Date.parse(data.publishDate)
                : 0;

            const condition1: boolean =
                currentVersion &&
                Number(currentVersion) != Number(data.version);

            const condition2: boolean =
                currentVersion &&
                Number(showed) < Number(currentVersion) + 0.5 &&
                showDate <= now &&
                publishDate > now;

            const condition3: boolean =
                Number(showed) < Number(data.version) && publishDate <= now;

            const allCondition: boolean =
                condition1 && (condition2 || condition3);

            setShowNewRegulations(allCondition);

            if (!allCondition) {
                dispatch(
                    setAppCurrentTerms({
                        version: data.version, // do testów -> jak zmienisz na wersję niższ to mozna sprwdzić czy się wyświetli dla update-u
                        showDate: data.showDate,
                        publishDate: data.publishDate,
                        title: data.title,
                        text: data.text,
                    }),
                );
            }

            // show New App Version
            if (
                showedNewAppVersion < shopAppVersion &&
                getIsNewVersion(shopAppVersion)
            ) {
                setShowNewAppVersion(true);
            }
        }
    }, [currentVersion, shopAppVersion, showedNewAppVersion, showed, data]);

    useEffect(() => {
        if (!isLoading) {
            const getPage = () => {
                if (showNewRegulations) {
                    return RegularStackRoute.NEW_REGULATIONS_SCREEN;
                }

                if (showNewAppVersion) {
                    return RegularStackRoute.NEW_APP_VERSION_SCREEN;
                }

                if (props.route.params?.redirectToScreen) {
                    return props.route.params.redirectToScreen;
                }

                return BothStackRoute.TAB_MENU_SCREEN;
            };

            const t = setTimeout(() => {
                props.navigation.replace(getPage());
            }, time);
            return () => {
                clearTimeout(t);
            };
        }
    }, [
        isLoading,
        props.navigation,
        shopAppVersion,
        showNewRegulations,
        props.route.params?.redirectToScreen,
    ]);

    const krossYouCan = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 118 52">
    <defs>
        <clipPath id="clip">
            <polygon>
                <animate attributeName="points" begin="0.4s" dur="1s" repeatCount="1" fill="freeze" values="-260,-10 -85,-10 -130,60 -260,60 ; -20,-10 175,-10 130,60 -20,60"></animate>
            </polygon>
        </clipPath>
        <clipPath id="clip2">
            <polygon fill="blue"  opacity=".3">
                <animate attributeName="points" begin="0.3s" dur="1s" repeatCount="1" fill="freeze" values="-85,-10 -65,-10 -110,60 -130,60  ;  175,-10 195,-10 150,60 130,60 "></animate>
            </polygon>
        </clipPath>
    </defs>
    <path clip-path="url(#clip)" fill="#d8232a" fill-rule="evenodd" d="M 26.675,0 24.338,6.268 22.779,12.05 H 21.578 L 22.13,6.268 22.195,0 H 17 l 0.016,23 h 5.006 l -0.054,-2.97 2.337,-4.523 2.18,7.493 h 4.736 L 27.681,10.629 32,0 Z M 8.019,9 H 9.622 L 9.639,6.739 10.989,6.735 V 5.064 L 9.639,5.088 V 2.65 H 12 V 1 H 8 L 8.02,9 Z M 1.066,1.85 C 1.075,1.543 1.152,1.324 1.298,1.194 1.444,1.065 1.68,1 2.007,1 c 0.326,0 0.56,0.065 0.702,0.194 0.14,0.13 0.216,0.349 0.225,0.657 0.088,1.758 0.088,3.52 0,5.286 C 2.925,7.445 2.85,7.666 2.709,7.799 2.567,7.933 2.333,8 2.007,8 1.68,8 1.444,7.933 1.298,7.8 1.152,7.666 1.075,7.445 1.066,7.137 0.978,5.371 0.978,3.609 1.066,1.851 Z M 0.618,9.433 C 1.002,9.811 1.626,10 2.49,10 3.34,10 3.955,9.811 4.335,9.433 4.715,9.055 4.92,8.427 4.95,7.549 4.972,6.939 4.987,6.362 4.995,5.817 5.002,5.272 5.002,4.726 4.995,4.177 4.987,3.628 4.972,3.049 4.95,2.439 4.92,1.569 4.715,0.945 4.335,0.567 3.955,0.189 3.34,0 2.49,0 1.626,0 1.002,0.189 0.618,0.567 0.234,0.945 0.034,1.569 0.02,2.439 0.012,3.049 0.007,3.626 0.003,4.171 c -0.004,0.545 -0.004,1.091 0,1.64 0.004,0.549 0.01,1.128 0.017,1.738 0.014,0.878 0.214,1.506 0.598,1.884 z m 105.348,3.32 c 0.595,1.024 1.663,1.73 3.205,2.114 l 2.693,0.673 c 0.468,0.107 0.858,0.347 1.17,0.72 0.312,0.375 0.488,0.786 0.527,1.234 0.117,1.069 0.117,2.147 0,3.236 -0.117,1.09 -0.8,1.634 -2.049,1.634 -1.327,0 -2.039,-0.544 -2.136,-1.634 -0.059,-0.619 -0.083,-1.308 -0.073,-2.066 0.01,-0.758 0.033,-1.533 0.073,-2.323 h -4.127 c -0.078,0.512 -0.122,1.095 -0.132,1.746 -0.01,0.652 -0.005,1.233 0.015,1.746 0.097,2.307 1.936,4.167 1.936,4.167 h 8.204 c 0,0 2.601,-1.86 2.68,-4.167 0.019,-0.363 0.033,-0.753 0.043,-1.17 0.01,-0.416 0.005,-0.805 -0.014,-1.169 -0.059,-1.644 -0.444,-3 -1.156,-4.069 -0.713,-1.068 -1.898,-1.794 -3.557,-2.179 l -2.37,-0.544 c -0.488,-0.107 -0.85,-0.342 -1.083,-0.705 -0.234,-0.363 -0.371,-0.758 -0.41,-1.186 -0.117,-1.11 -0.117,-2.21 0,-3.3 0.117,-1.068 0.82,-1.602 2.107,-1.602 1.366,0 2.068,0.534 2.108,1.602 0.039,0.726 0.053,1.458 0.044,2.195 -0.01,0.737 -0.035,1.48 -0.074,2.227 h 4.215 c 0.039,-0.556 0.063,-1.164 0.073,-1.827 0.01,-0.662 0.005,-1.228 -0.014,-1.698 C 117.785,4.123 117.254,2.483 116.268,1.49 115.283,0.497 113.698,0 111.512,0 c -2.244,0 -3.863,0.497 -4.858,1.49 -0.995,0.993 -1.542,2.633 -1.64,4.918 -0.019,0.748 -0.019,1.55 0,2.403 0.04,1.602 0.357,2.916 0.952,3.941 z m -10.015,7.08 c 0.02,-0.363 0.034,-0.753 0.044,-1.17 0.01,-0.416 0.005,-0.805 -0.014,-1.169 -0.059,-1.644 -0.444,-3 -1.156,-4.069 -0.713,-1.068 -1.898,-1.794 -3.557,-2.179 l -2.37,-0.544 C 88.41,10.595 88.048,10.36 87.815,9.997 87.581,9.634 87.444,9.239 87.405,8.811 c -0.117,-1.11 -0.117,-2.21 0,-3.3 0.117,-1.068 0.82,-1.602 2.107,-1.602 1.366,0 2.068,0.534 2.108,1.602 0.039,0.726 0.053,1.458 0.044,2.195 -0.01,0.737 -0.035,1.48 -0.074,2.227 h 4.215 C 95.844,9.377 95.868,8.769 95.878,8.106 95.888,7.444 95.883,6.878 95.864,6.408 95.785,4.123 95.254,2.483 94.268,1.49 93.283,0.497 91.698,0 89.512,0 c -2.244,0 -3.863,0.497 -4.858,1.49 -0.995,0.993 -1.542,2.633 -1.64,4.918 -0.019,0.748 -0.019,1.55 0,2.403 0.04,1.602 0.357,2.916 0.952,3.941 0.595,1.025 1.663,1.73 3.205,2.115 l 2.693,0.673 c 0.468,0.107 0.858,0.347 1.17,0.72 0.312,0.375 0.488,0.786 0.527,1.234 0.117,1.069 0.117,2.147 0,3.236 -0.117,1.09 -0.8,1.634 -2.049,1.634 -1.327,0 -2.039,-0.544 -2.136,-1.634 -0.059,-0.619 -0.083,-1.308 -0.073,-2.066 0.01,-0.758 0.033,-1.533 0.073,-2.323 h -4.127 c -0.078,0.512 -0.122,1.095 -0.132,1.746 -0.01,0.652 -0.005,1.233 0.015,1.746 C 83.229,22.14 85.098,24 85.098,24 h 7.952 c 0,0 2.823,-1.86 2.901,-4.167 z M 69.835,19.781 c -0.023,0.792 -0.21,1.36 -0.563,1.703 C 68.918,21.828 68.333,22 67.517,22 66.7,22 66.109,21.828 65.745,21.484 c -0.364,-0.343 -0.558,-0.91 -0.58,-1.703 -0.22,-4.541 -0.22,-9.073 0,-13.593 C 65.187,5.396 65.381,4.833 65.745,4.5 66.109,4.167 66.7,4 67.517,4 c 0.816,0 1.401,0.167 1.755,0.5 0.353,0.333 0.54,0.896 0.563,1.688 0.22,4.52 0.22,9.052 0,13.593 z M 73.869,6.401 C 73.792,4.118 73.259,2.481 72.271,1.488 71.283,0.496 69.684,0 67.475,0 65.227,0 63.604,0.496 62.606,1.488 61.608,2.48 61.09,4.118 61.051,6.401 c -0.02,1.6 -0.034,3.116 -0.043,4.545 -0.01,1.43 -0.01,2.864 0,4.305 0.01,1.44 0.024,2.96 0.043,4.56 0.039,2.305 1.008,3.818 1.28,4.163 0.045,0.059 5.265,0 5.265,0 0,0 5.404,0.059 5.39,0 0.234,-0.281 0.806,-1.858 0.883,-4.163 0.059,-1.6 0.097,-3.115 0.117,-4.544 0.019,-1.43 0.019,-2.865 0,-4.305 -0.02,-1.44 -0.058,-2.96 -0.117,-4.56 z M 47.917,10.346 C 47.851,11.449 47.131,12 45.759,12 H 44 V 4 h 1.76 c 1.371,0 2.09,0.552 2.157,1.654 0.11,1.564 0.11,3.128 0,4.692 z m 5.03,-4.014 C 52.863,4.082 52.312,2.463 51.293,1.478 50.273,0.493 48.609,0 46.301,0 H 40.027 L 40,24 h 4.665 l -0.002,-6.789 h 1.36 L 47.864,24 h 4.799 l -2.282,-7.6 c 0.844,-0.477 1.473,-1.164 1.885,-2.063 0.412,-0.898 0.639,-2.05 0.68,-3.458 0.02,-0.606 0.036,-1.137 0.046,-1.591 0.01,-0.455 0.01,-0.91 0,-1.364 C 52.982,7.469 52.966,6.939 52.946,6.332 Z M 111.04,51 H 117 v -3 l -6,0.036 z m 6.92,-18 h -3.954 L 114,39.532 114.533,46 h 2.934 L 118,39.532 Z m -13.72,1 0.241,7.464 0.812,8.008 h -1.152 L 101.635,34 H 95.022 L 95,52 h 3.757 l -0.325,-7.565 -0.652,-8.92 h 1.055 L 101.513,52 H 108 l -0.046,-18 h -3.715 z M 82,44 82.333,39.683 82.556,35 h 0.888 L 83.667,39.683 84,44 Z M 79.605,34 77,52 h 3.866 l 0.427,-4.115 h 3.414 L 85.134,52 H 89 L 86.499,34 Z M 67.274,44.465 c 0.033,0.55 0.05,1.033 0.05,1.446 0,0.413 -0.017,0.88 -0.05,1.398 -0.017,0.616 -0.16,1.057 -0.432,1.324 -0.272,0.268 -0.72,0.401 -1.345,0.401 -0.609,0 -1.049,-0.133 -1.32,-0.4 -0.272,-0.268 -0.416,-0.71 -0.432,-1.325 -0.099,-3.517 -0.099,-7.041 0,-10.574 0.016,-0.616 0.16,-1.054 0.432,-1.313 0.271,-0.259 0.711,-0.389 1.32,-0.389 0.576,0 0.995,0.13 1.259,0.389 0.263,0.26 0.403,0.697 0.42,1.313 0.015,0.454 0.02,0.932 0.011,1.434 -0.008,0.502 -0.02,0.98 -0.037,1.434 h 3.702 c 0.016,-0.405 0.028,-0.85 0.037,-1.337 0.008,-0.486 0.004,-0.932 -0.012,-1.337 C 70.827,35.276 70.18,34 70.18,34 h -9.081 c 0,0 -1.023,1.22 -1.056,2.905 -0.016,1.215 -0.029,2.374 -0.037,3.476 -0.008,1.102 -0.008,2.196 0,3.281 0.008,1.086 0.02,2.237 0.037,3.452 0.033,1.75 0.473,3.002 1.32,3.756 0.848,0.753 2.225,1.13 4.134,1.13 1.908,0 3.286,-0.377 4.133,-1.13 0.848,-0.754 1.296,-2.006 1.345,-3.756 C 70.992,46.725 71,46.284 71,45.789 71,45.295 70.992,44.853 70.975,44.465 Z M 40.274,34 c 0.048,2.447 0.031,3.298 0.023,5.931 -0.009,2.634 -0.029,5.174 -0.062,7.62 0,0.99 -0.576,1.483 -1.729,1.483 -1.17,0 -1.754,-0.494 -1.754,-1.482 l -0.05,-7.62 C 36.686,37.298 36.696,36.447 36.746,34 h -3.663 c -0.083,4.927 -0.119,8.172 -0.036,13.114 0.033,1.75 0.47,3.002 1.31,3.756 0.839,0.753 2.222,1.13 4.149,1.13 1.91,0 3.29,-0.377 4.138,-1.13 0.848,-0.754 1.28,-2.006 1.296,-3.756 C 44.023,42.172 44.018,38.927 43.936,34 H 40.273 Z M 22.868,47.274 C 22.85,47.89 22.7,48.332 22.418,48.599 22.135,48.866 21.667,49 21.013,49 20.36,49 19.888,48.866 19.596,48.599 19.305,48.332 19.15,47.89 19.133,47.274 c -0.177,-3.532 -0.177,-7.056 0,-10.573 0.017,-0.615 0.172,-1.053 0.463,-1.312 C 19.888,35.129 20.36,35 21.013,35 c 0.654,0 1.122,0.13 1.404,0.389 0.283,0.26 0.433,0.697 0.45,1.312 0.177,3.517 0.177,7.041 0,10.573 z M 25.89,36.929 C 25.824,35.195 24.498,34 24.498,34 h -8.105 c 0,0 -1.317,1.195 -1.35,2.93 -0.016,1.214 -0.029,2.365 -0.037,3.45 -0.008,1.087 -0.008,2.176 0,3.27 0.008,1.094 0.02,2.249 0.037,3.464 0.033,1.75 0.471,3.002 1.316,3.756 0.844,0.753 2.217,1.13 4.12,1.13 1.869,0 3.222,-0.377 4.058,-1.13 0.836,-0.754 1.287,-2.006 1.353,-3.756 0.049,-1.215 0.081,-2.366 0.098,-3.452 0.016,-1.085 0.016,-2.175 0,-3.269 -0.017,-1.094 -0.05,-2.249 -0.098,-3.464 z M 6.209,38.312 5.842,43.534 H 5.158 L 4.791,38.312 3.74,34 H 0 L 3.606,46.425 V 52 H 7.342 V 46.475 H 7.355 L 11,34 H 7.26 Z"/>
    <path clip-path="url(#clip2)" opacity=".3" fill="#d8232a" fill-rule="evenodd" d="M 26.675,0 24.338,6.268 22.779,12.05 H 21.578 L 22.13,6.268 22.195,0 H 17 l 0.016,23 h 5.006 l -0.054,-2.97 2.337,-4.523 2.18,7.493 h 4.736 L 27.681,10.629 32,0 Z M 8.019,9 H 9.622 L 9.639,6.739 10.989,6.735 V 5.064 L 9.639,5.088 V 2.65 H 12 V 1 H 8 L 8.02,9 Z M 1.066,1.85 C 1.075,1.543 1.152,1.324 1.298,1.194 1.444,1.065 1.68,1 2.007,1 c 0.326,0 0.56,0.065 0.702,0.194 0.14,0.13 0.216,0.349 0.225,0.657 0.088,1.758 0.088,3.52 0,5.286 C 2.925,7.445 2.85,7.666 2.709,7.799 2.567,7.933 2.333,8 2.007,8 1.68,8 1.444,7.933 1.298,7.8 1.152,7.666 1.075,7.445 1.066,7.137 0.978,5.371 0.978,3.609 1.066,1.851 Z M 0.618,9.433 C 1.002,9.811 1.626,10 2.49,10 3.34,10 3.955,9.811 4.335,9.433 4.715,9.055 4.92,8.427 4.95,7.549 4.972,6.939 4.987,6.362 4.995,5.817 5.002,5.272 5.002,4.726 4.995,4.177 4.987,3.628 4.972,3.049 4.95,2.439 4.92,1.569 4.715,0.945 4.335,0.567 3.955,0.189 3.34,0 2.49,0 1.626,0 1.002,0.189 0.618,0.567 0.234,0.945 0.034,1.569 0.02,2.439 0.012,3.049 0.007,3.626 0.003,4.171 c -0.004,0.545 -0.004,1.091 0,1.64 0.004,0.549 0.01,1.128 0.017,1.738 0.014,0.878 0.214,1.506 0.598,1.884 z m 105.348,3.32 c 0.595,1.024 1.663,1.73 3.205,2.114 l 2.693,0.673 c 0.468,0.107 0.858,0.347 1.17,0.72 0.312,0.375 0.488,0.786 0.527,1.234 0.117,1.069 0.117,2.147 0,3.236 -0.117,1.09 -0.8,1.634 -2.049,1.634 -1.327,0 -2.039,-0.544 -2.136,-1.634 -0.059,-0.619 -0.083,-1.308 -0.073,-2.066 0.01,-0.758 0.033,-1.533 0.073,-2.323 h -4.127 c -0.078,0.512 -0.122,1.095 -0.132,1.746 -0.01,0.652 -0.005,1.233 0.015,1.746 0.097,2.307 1.936,4.167 1.936,4.167 h 8.204 c 0,0 2.601,-1.86 2.68,-4.167 0.019,-0.363 0.033,-0.753 0.043,-1.17 0.01,-0.416 0.005,-0.805 -0.014,-1.169 -0.059,-1.644 -0.444,-3 -1.156,-4.069 -0.713,-1.068 -1.898,-1.794 -3.557,-2.179 l -2.37,-0.544 c -0.488,-0.107 -0.85,-0.342 -1.083,-0.705 -0.234,-0.363 -0.371,-0.758 -0.41,-1.186 -0.117,-1.11 -0.117,-2.21 0,-3.3 0.117,-1.068 0.82,-1.602 2.107,-1.602 1.366,0 2.068,0.534 2.108,1.602 0.039,0.726 0.053,1.458 0.044,2.195 -0.01,0.737 -0.035,1.48 -0.074,2.227 h 4.215 c 0.039,-0.556 0.063,-1.164 0.073,-1.827 0.01,-0.662 0.005,-1.228 -0.014,-1.698 C 117.785,4.123 117.254,2.483 116.268,1.49 115.283,0.497 113.698,0 111.512,0 c -2.244,0 -3.863,0.497 -4.858,1.49 -0.995,0.993 -1.542,2.633 -1.64,4.918 -0.019,0.748 -0.019,1.55 0,2.403 0.04,1.602 0.357,2.916 0.952,3.941 z m -10.015,7.08 c 0.02,-0.363 0.034,-0.753 0.044,-1.17 0.01,-0.416 0.005,-0.805 -0.014,-1.169 -0.059,-1.644 -0.444,-3 -1.156,-4.069 -0.713,-1.068 -1.898,-1.794 -3.557,-2.179 l -2.37,-0.544 C 88.41,10.595 88.048,10.36 87.815,9.997 87.581,9.634 87.444,9.239 87.405,8.811 c -0.117,-1.11 -0.117,-2.21 0,-3.3 0.117,-1.068 0.82,-1.602 2.107,-1.602 1.366,0 2.068,0.534 2.108,1.602 0.039,0.726 0.053,1.458 0.044,2.195 -0.01,0.737 -0.035,1.48 -0.074,2.227 h 4.215 C 95.844,9.377 95.868,8.769 95.878,8.106 95.888,7.444 95.883,6.878 95.864,6.408 95.785,4.123 95.254,2.483 94.268,1.49 93.283,0.497 91.698,0 89.512,0 c -2.244,0 -3.863,0.497 -4.858,1.49 -0.995,0.993 -1.542,2.633 -1.64,4.918 -0.019,0.748 -0.019,1.55 0,2.403 0.04,1.602 0.357,2.916 0.952,3.941 0.595,1.025 1.663,1.73 3.205,2.115 l 2.693,0.673 c 0.468,0.107 0.858,0.347 1.17,0.72 0.312,0.375 0.488,0.786 0.527,1.234 0.117,1.069 0.117,2.147 0,3.236 -0.117,1.09 -0.8,1.634 -2.049,1.634 -1.327,0 -2.039,-0.544 -2.136,-1.634 -0.059,-0.619 -0.083,-1.308 -0.073,-2.066 0.01,-0.758 0.033,-1.533 0.073,-2.323 h -4.127 c -0.078,0.512 -0.122,1.095 -0.132,1.746 -0.01,0.652 -0.005,1.233 0.015,1.746 C 83.229,22.14 85.098,24 85.098,24 h 7.952 c 0,0 2.823,-1.86 2.901,-4.167 z M 69.835,19.781 c -0.023,0.792 -0.21,1.36 -0.563,1.703 C 68.918,21.828 68.333,22 67.517,22 66.7,22 66.109,21.828 65.745,21.484 c -0.364,-0.343 -0.558,-0.91 -0.58,-1.703 -0.22,-4.541 -0.22,-9.073 0,-13.593 C 65.187,5.396 65.381,4.833 65.745,4.5 66.109,4.167 66.7,4 67.517,4 c 0.816,0 1.401,0.167 1.755,0.5 0.353,0.333 0.54,0.896 0.563,1.688 0.22,4.52 0.22,9.052 0,13.593 z M 73.869,6.401 C 73.792,4.118 73.259,2.481 72.271,1.488 71.283,0.496 69.684,0 67.475,0 65.227,0 63.604,0.496 62.606,1.488 61.608,2.48 61.09,4.118 61.051,6.401 c -0.02,1.6 -0.034,3.116 -0.043,4.545 -0.01,1.43 -0.01,2.864 0,4.305 0.01,1.44 0.024,2.96 0.043,4.56 0.039,2.305 1.008,3.818 1.28,4.163 0.045,0.059 5.265,0 5.265,0 0,0 5.404,0.059 5.39,0 0.234,-0.281 0.806,-1.858 0.883,-4.163 0.059,-1.6 0.097,-3.115 0.117,-4.544 0.019,-1.43 0.019,-2.865 0,-4.305 -0.02,-1.44 -0.058,-2.96 -0.117,-4.56 z M 47.917,10.346 C 47.851,11.449 47.131,12 45.759,12 H 44 V 4 h 1.76 c 1.371,0 2.09,0.552 2.157,1.654 0.11,1.564 0.11,3.128 0,4.692 z m 5.03,-4.014 C 52.863,4.082 52.312,2.463 51.293,1.478 50.273,0.493 48.609,0 46.301,0 H 40.027 L 40,24 h 4.665 l -0.002,-6.789 h 1.36 L 47.864,24 h 4.799 l -2.282,-7.6 c 0.844,-0.477 1.473,-1.164 1.885,-2.063 0.412,-0.898 0.639,-2.05 0.68,-3.458 0.02,-0.606 0.036,-1.137 0.046,-1.591 0.01,-0.455 0.01,-0.91 0,-1.364 C 52.982,7.469 52.966,6.939 52.946,6.332 Z M 111.04,51 H 117 v -3 l -6,0.036 z m 6.92,-18 h -3.954 L 114,39.532 114.533,46 h 2.934 L 118,39.532 Z m -13.72,1 0.241,7.464 0.812,8.008 h -1.152 L 101.635,34 H 95.022 L 95,52 h 3.757 l -0.325,-7.565 -0.652,-8.92 h 1.055 L 101.513,52 H 108 l -0.046,-18 h -3.715 z M 82,44 82.333,39.683 82.556,35 h 0.888 L 83.667,39.683 84,44 Z M 79.605,34 77,52 h 3.866 l 0.427,-4.115 h 3.414 L 85.134,52 H 89 L 86.499,34 Z M 67.274,44.465 c 0.033,0.55 0.05,1.033 0.05,1.446 0,0.413 -0.017,0.88 -0.05,1.398 -0.017,0.616 -0.16,1.057 -0.432,1.324 -0.272,0.268 -0.72,0.401 -1.345,0.401 -0.609,0 -1.049,-0.133 -1.32,-0.4 -0.272,-0.268 -0.416,-0.71 -0.432,-1.325 -0.099,-3.517 -0.099,-7.041 0,-10.574 0.016,-0.616 0.16,-1.054 0.432,-1.313 0.271,-0.259 0.711,-0.389 1.32,-0.389 0.576,0 0.995,0.13 1.259,0.389 0.263,0.26 0.403,0.697 0.42,1.313 0.015,0.454 0.02,0.932 0.011,1.434 -0.008,0.502 -0.02,0.98 -0.037,1.434 h 3.702 c 0.016,-0.405 0.028,-0.85 0.037,-1.337 0.008,-0.486 0.004,-0.932 -0.012,-1.337 C 70.827,35.276 70.18,34 70.18,34 h -9.081 c 0,0 -1.023,1.22 -1.056,2.905 -0.016,1.215 -0.029,2.374 -0.037,3.476 -0.008,1.102 -0.008,2.196 0,3.281 0.008,1.086 0.02,2.237 0.037,3.452 0.033,1.75 0.473,3.002 1.32,3.756 0.848,0.753 2.225,1.13 4.134,1.13 1.908,0 3.286,-0.377 4.133,-1.13 0.848,-0.754 1.296,-2.006 1.345,-3.756 C 70.992,46.725 71,46.284 71,45.789 71,45.295 70.992,44.853 70.975,44.465 Z M 40.274,34 c 0.048,2.447 0.031,3.298 0.023,5.931 -0.009,2.634 -0.029,5.174 -0.062,7.62 0,0.99 -0.576,1.483 -1.729,1.483 -1.17,0 -1.754,-0.494 -1.754,-1.482 l -0.05,-7.62 C 36.686,37.298 36.696,36.447 36.746,34 h -3.663 c -0.083,4.927 -0.119,8.172 -0.036,13.114 0.033,1.75 0.47,3.002 1.31,3.756 0.839,0.753 2.222,1.13 4.149,1.13 1.91,0 3.29,-0.377 4.138,-1.13 0.848,-0.754 1.28,-2.006 1.296,-3.756 C 44.023,42.172 44.018,38.927 43.936,34 H 40.273 Z M 22.868,47.274 C 22.85,47.89 22.7,48.332 22.418,48.599 22.135,48.866 21.667,49 21.013,49 20.36,49 19.888,48.866 19.596,48.599 19.305,48.332 19.15,47.89 19.133,47.274 c -0.177,-3.532 -0.177,-7.056 0,-10.573 0.017,-0.615 0.172,-1.053 0.463,-1.312 C 19.888,35.129 20.36,35 21.013,35 c 0.654,0 1.122,0.13 1.404,0.389 0.283,0.26 0.433,0.697 0.45,1.312 0.177,3.517 0.177,7.041 0,10.573 z M 25.89,36.929 C 25.824,35.195 24.498,34 24.498,34 h -8.105 c 0,0 -1.317,1.195 -1.35,2.93 -0.016,1.214 -0.029,2.365 -0.037,3.45 -0.008,1.087 -0.008,2.176 0,3.27 0.008,1.094 0.02,2.249 0.037,3.464 0.033,1.75 0.471,3.002 1.316,3.756 0.844,0.753 2.217,1.13 4.12,1.13 1.869,0 3.222,-0.377 4.058,-1.13 0.836,-0.754 1.287,-2.006 1.353,-3.756 0.049,-1.215 0.081,-2.366 0.098,-3.452 0.016,-1.085 0.016,-2.175 0,-3.269 -0.017,-1.094 -0.05,-2.249 -0.098,-3.464 z M 6.209,38.312 5.842,43.534 H 5.158 L 4.791,38.312 3.74,34 H 0 L 3.606,46.425 V 52 H 7.342 V 46.475 H 7.355 L 11,34 H 7.26 Z"/>
</svg>`;

    const pathScaleY = 0.9 * (height / width / (896 / 414));
    const allLine = (width / 780.5) * 1394.3299560546875;

    const linePath =
        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 780.5 235" transform-origin="0 0" transform="translate(0 ' +
        getVerticalPx(100) +
        `)" >
<path transform="scale(1.02 ` +
        pathScaleY +
        `)" fill="none" stroke="#d8232a" stroke-width="1" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="4" stroke-dasharray="5 7" stroke-dashoffset="0"; vector-effect="non-scaling-stroke" d="m -0.33771156,111.59275 c 0,0 21.80715956,1.34357 31.19404956,-5.54053 9.38689,-6.884097 12.90885,-14.805211 27.57231,-12.645271 14.66347,2.159934 31.74926,28.636311 50.914372,41.705521 19.16511,13.06921 37.18624,3.73257 42.62949,-7.61718 5.44325,-11.34976 -4.13146,-26.68449 2.14808,-36.228223 8.89059,-13.512047 38.43884,-15.473638 50.50122,-13.597978 12.06239,1.87566 20.73793,16.629252 27.53576,25.941961 3.631,4.97429 11.99908,19.77635 31.36279,31.98726 19.68,12.41036 80.06309,16.79441 97.51342,-6.92495 15.08597,-20.50561 12.41098,-39.463919 5.61301,-49.829535 -9.97549,-15.210733 -20.36178,-27.497651 -5.26811,-46.392482 6.22047,-7.78702 15.6387,-13.665704 21.385,-15.737044 13.04064,-4.70069 24.22456,-6.170339 28.53102,22.11655 4.19803,27.57462 6.38261,62.033691 37.49889,81.147731 15.14441,9.30287 67.68357,18.45429 101.98675,4.84847 13.79925,-5.47326 14.79695,-25.106047 6.7201,-34.416765 -8.86927,-10.224199 -22.11358,-6.540667 -18.78248,-23.262518 1.32079,-6.630265 13.78401,-9.741677 26.33093,1.077352 15.65972,13.503153 29.10662,33.967711 35.6715,3.63802 4.72471,-21.82813 3.87426,-52.16072 18.9933,-62.7440592 15.1135,-10.5794497 28.11392,-1.2509792 34.33837,4.9734742 4.82012,4.820122 12.81219,8.656904 22.18483,1.249504 11.71726,-9.2604141 24.42293,-18.5464479 48.5062,-11.8494979 24.98971,6.9490099 33.88292,18.8353649 33.76262,37.6449349 -0.0953,14.903714 -4.90293,26.537929 -9.63055,36.542234 -7.42353,15.709226 -16.21486,19.117829 -15.7542,8.113608 0.46066,-11.004221 17.7787,3.950183 27.24713,15.150343 9.46843,11.20016 21.85651,28.69838 21.85651,28.69838">
<animate attributeName="stroke-dashoffset" dur="100s" repeatCount="indefinite" values="0 ; -700"/>
</path>
<path transform="scale(1.02 ` +
        pathScaleY +
        ')" stroke-dashoffset="0" stroke-dasharray="' +
        allLine +
        ' ' +
        allLine +
        `" fill="none" stroke-width="3" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="4" stroke="#fff"  vector-effect="non-scaling-stroke"  d="m -0.33771156,111.59275 c 0,0 21.80715956,1.34357 31.19404956,-5.54053 9.38689,-6.884097 12.90885,-14.805211 27.57231,-12.645271 14.66347,2.159934 31.74926,28.636311 50.914372,41.705521 19.16511,13.06921 37.18624,3.73257 42.62949,-7.61718 5.44325,-11.34976 -4.13146,-26.68449 2.14808,-36.228223 8.89059,-13.512047 38.43884,-15.473638 50.50122,-13.597978 12.06239,1.87566 20.73793,16.629252 27.53576,25.941961 3.631,4.97429 11.99908,19.77635 31.36279,31.98726 19.68,12.41036 80.06309,16.79441 97.51342,-6.92495 15.08597,-20.50561 12.41098,-39.463919 5.61301,-49.829535 -9.97549,-15.210733 -20.36178,-27.497651 -5.26811,-46.392482 6.22047,-7.78702 15.6387,-13.665704 21.385,-15.737044 13.04064,-4.70069 24.22456,-6.170339 28.53102,22.11655 4.19803,27.57462 6.38261,62.033691 37.49889,81.147731 15.14441,9.30287 67.68357,18.45429 101.98675,4.84847 13.79925,-5.47326 14.79695,-25.106047 6.7201,-34.416765 -8.86927,-10.224199 -22.11358,-6.540667 -18.78248,-23.262518 1.32079,-6.630265 13.78401,-9.741677 26.33093,1.077352 15.65972,13.503153 29.10662,33.967711 35.6715,3.63802 4.72471,-21.82813 3.87426,-52.16072 18.9933,-62.7440592 15.1135,-10.5794497 28.11392,-1.2509792 34.33837,4.9734742 4.82012,4.820122 12.81219,8.656904 22.18483,1.249504 11.71726,-9.2604141 24.42293,-18.5464479 48.5062,-11.8494979 24.98971,6.9490099 33.88292,18.8353649 33.76262,37.6449349 -0.0953,14.903714 -4.90293,26.537929 -9.63055,36.542234 -7.42353,15.709226 -16.21486,19.117829 -15.7542,8.113608 0.46066,-11.004221 17.7787,3.950183 27.24713,15.150343 9.46843,11.20016 21.85651,28.69838 21.85651,28.69838">
<animate attributeName="stroke-dashoffset" begin="0.7s" dur="3s" repeatCount="1" fill="freeze" values="0 ; -` +
        allLine +
        `"/>
<animate attributeName="stroke-width" begin="3.6s" dur="0.001s" repeatCount="1" fill="freeze" values="3 ; 0"/>
</path>
</svg>`;

    setObjSize(414 * 4, 0.3 * 414 * 4);
    const line: any = {
        position: 'absolute',
        width: getWidthPx(),
        height: getRelativeHeight(),
        left: -width * 0.01,
        top: getVerticalPx(330),
        // backgroundColor: '#00ff9933',
    };

    const styles = StyleSheet.create({
        container: {
            width: width,
            height: '100%',
            backgroundColor: 'white',
        },
        krossLogo: getStandardPx(180, 200, 280),
        krossYouCan: getStandardPx(118, 52, 767),
        line,
        khaki: {
            backgroundColor: 'khaki',
        },
    });

    return (
        <>
            <StatusBar hidden />
            <View style={styles.container}>
                <View style={styles.krossLogo}>
                    <KrossLogoSvg />
                </View>

                <AnimSvg style={styles.krossYouCan} source={krossYouCan} />
            </View>
        </>
    );
};

export default SplashScreen;

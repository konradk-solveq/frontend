// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ErrorBoundary /> Rendering Should match snapshot - render 1`] = `
<Text>
  Child component
</Text>
`;

exports[`<ErrorBoundary /> Rendering When error occurs Should catch error and render message 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignContent": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "height": "100%",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 536.231884057971,
            "left": -172.1014492753623,
            "marginTop": 119.10714285714286,
            "width": 1094.2028985507247,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "height": "100%",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <RNCWebView
            cacheEnabled={true}
            injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
            injectedJavaScriptForMainFrameOnly={true}
            javaScriptEnabled={true}
            messagingEnabled={false}
            onContentProcessDidTerminate={[Function]}
            onHttpError={[Function]}
            onLoadingError={[Function]}
            onLoadingFinish={[Function]}
            onLoadingProgress={[Function]}
            onLoadingStart={[Function]}
            onMessage={[Function]}
            onShouldStartLoadWithRequest={[Function]}
            scalesPageToFit={true}
            scrollEnabled={false}
            showsHorizontalScrollIndicator={false}
            showsVerticalScrollIndicator={false}
            source={
              Object {
                "html": "<!DOCTYPE html><html lang=\\"pl-PL\\"><head><meta http-equiv=\\"Content-Type\\" content=\\"text/html;  charset=utf-8\\"><meta name=\\"viewport\\" content=\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\" /><style>html,body,svg {margin:0;padding:0;height:100%;width:100%;overflow:hidden;background-color:transparent} svg{position:fixed}</style></head><body><svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 416 202\\">
<circle cx=\\"207.96\\" cy=\\"101.03\\" r=\\"100.71\\" fill=\\"#f67e83\\" fill-opacity=\\".2\\" paint-order=\\"markers fill stroke\\">
    <animate attributeName=\\"r\\" begin=\\"0.2s\\" dur=\\"0.5s\\" repeatCount=\\"1\\" values=\\"0 ; 100.71\\" fill=\\"freeze\\"/>
</circle>
<path fill=\\"none\\" stroke=\\"#d8232a\\" stroke-dasharray=\\"6 8\\" stroke-linecap=\\"round\\" d=\\"M-3.51 93.14c25.58-.3 52.63 3.88 84.7 28.71 32.04 24.82 60.31 43.8 91.3 53.09 30.98 9.3 92.75 15.9 126 6.4 33.26-9.5 44.62-24.47 47.4-32.95 2.77-8.47 6.86-22.71-16.07-33.96-19.1-9.36-35.22-12.18-58.3-19.72-23.08-7.54-34.1-39.08-2.57-51.4 41.16-16.1 95.78-27.43 152.25-35.23\\">
    <animate attributeName=\\"stroke-dashoffset\\" dur=\\"5s\\" repeatCount=\\"indefinite\\" values=\\"0 ; -140\\"/>
</path>
<path transform-origin=\\"204.08 170.55\\" transform=\\"scale(0)\\" fill=\\"#fff\\" stroke=\\"#d8232a\\" d=\\"M264.18 101.97a65.6 65.6 0 01-3.33 6.6l-.64 1.1c-.54.91-1.12 1.86-1.73 2.82l-.75 1.16c-.51.79-1.04 1.58-1.6 2.4l-.84 1.21-.88 1.24-.91 1.26-.94 1.27-.49.65-.99 1.3-1.02 1.32-1.05 1.33-1.08 1.35-1.12 1.37-1.14 1.38-1.18 1.4-1.2 1.4-1.24 1.42-1.27 1.44-1.3 1.45-1.33 1.46-1.36 1.48-1.38 1.48-1.42 1.5-1.45 1.5-1.48 1.52-.75.76-1.52 1.53-2.33 2.32-1.6 1.55-1.62 1.56-.82.78-1.66 1.57-1.7 1.57-1.71 1.58-1.75 1.59-1.77 1.59-1.8 1.59-1.84 1.6-1.85 1.6-1.88 1.59-2.38 1.99-2.13-2.8-1.7-2.2-1.66-2.17-1.64-2.12-1.62-2.08-1.6-2.04-2.34-2.99-1.53-1.94-1.5-1.9-1.48-1.88-1.45-1.83-1.42-1.8-1.4-1.76-1.38-1.73-.67-.85-1.34-1.68-1.3-1.64-1.28-1.61-1.26-1.58-1.22-1.55-1.2-1.51-1.17-1.49-1.14-1.45-1.12-1.42-1.08-1.4-1.06-1.36-1.03-1.33-1-1.31-.5-.64-.95-1.27-.47-.62-.91-1.22-.45-.6-.87-1.19-.43-.58-.83-1.15-.8-1.12-.77-1.09-.37-.54-.73-1.05-.7-1.04c-.45-.67-.88-1.34-1.3-1.99l-.6-.96a56.6 56.6 0 01-3.93-7.24c-16.33-34.84 5.9-62.06 58.52-67.99l1.6-.17c52.72-5.3 72.78 25.53 53.3 71.3zm-56.02-41.1c-10.22.53-18.65 6.86-18.84 14.13-.2 7.27 7.79 13.2 17.82 13.24 10.04.04 18.47-6.29 18.84-14.13.37-7.85-7.6-13.78-17.82-13.24z\\">
    <animateTransform attributeName=\\"transform\\" attributeType=\\"XML\\" type=\\"scale\\" values=\\"0 ; 0.4 ; 0.75 ; 1\\" dur=\\"0.7s\\" begin=\\"0.3s\\" repeatCount=\\"1\\" fill=\\"freeze\\"/>
</path>
</svg</body></html>",
              }
            }
            style={
              Array [
                Object {
                  "flex": 1,
                  "overflow": "hidden",
                },
                Object {
                  "backgroundColor": "#ffffff",
                },
                Object {
                  "backgroundColor": "transparent",
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
            useSharedProcessPool={true}
            useWebKit={false}
          />
        </View>
      </View>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": "#313131",
            "fontFamily": "DIN2014Narrow-Regular",
            "fontSize": 32,
            "marginHorizontal": 40,
            "paddingBottom": 16,
          }
        }
      >
        Wystąpił błąd
      </Text>
      <Text
        style={
          Object {
            "color": "#313131",
            "fontFamily": "DIN2014Narrow-Light",
            "fontSize": 24,
            "fontWeight": "800",
            "marginHorizontal": 40,
          }
        }
      >
        Przepraszamy...
      </Text>
    </View>
    <View
      style={
        Object {
          "marginHorizontal": 40,
        }
      }
    >
      <View
        style={
          Object {
            "height": 60,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          testID="error-boundary-reset-button"
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d8232a",
                "borderRadius": 50,
                "display": "flex",
                "height": "100%",
                "justifyContent": "center",
                "opacity": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "white",
                    "fontFamily": "DIN2014Narrow-Bold",
                    "fontSize": 20,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              SPRÓBUJ PONOWNIE
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <RNGestureHandlerButton
        collapsable={false}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        rippleColor={0}
        testID="error-boundary-restart-button"
      >
        <View
          accessible={true}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#33555555",
              "borderRadius": 90.57971014492753,
              "borderWidth": 1,
              "display": "flex",
              "height": 60,
              "justifyContent": "center",
              "marginBottom": 89.33035714285715,
              "marginTop": 29.776785714285715,
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#313131",
                "fontFamily": "DIN2014Narrow-Bold",
                "fontSize": 36.231884057971016,
                "textAlign": "center",
              }
            }
          >
            URUCHOM PONOWNIE APLIKACJĘ
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<ErrorBoundary /> Rendering When error occurs Should fire onErrorHandler when pass as prop and error occured 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignContent": "center",
      "backgroundColor": "#ffffff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "height": "100%",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 536.231884057971,
            "left": -172.1014492753623,
            "marginTop": 119.10714285714286,
            "width": 1094.2028985507247,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "height": "100%",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <RNCWebView
            cacheEnabled={true}
            injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
            injectedJavaScriptForMainFrameOnly={true}
            javaScriptEnabled={true}
            messagingEnabled={false}
            onContentProcessDidTerminate={[Function]}
            onHttpError={[Function]}
            onLoadingError={[Function]}
            onLoadingFinish={[Function]}
            onLoadingProgress={[Function]}
            onLoadingStart={[Function]}
            onMessage={[Function]}
            onShouldStartLoadWithRequest={[Function]}
            scalesPageToFit={true}
            scrollEnabled={false}
            showsHorizontalScrollIndicator={false}
            showsVerticalScrollIndicator={false}
            source={
              Object {
                "html": "<!DOCTYPE html><html lang=\\"pl-PL\\"><head><meta http-equiv=\\"Content-Type\\" content=\\"text/html;  charset=utf-8\\"><meta name=\\"viewport\\" content=\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\" /><style>html,body,svg {margin:0;padding:0;height:100%;width:100%;overflow:hidden;background-color:transparent} svg{position:fixed}</style></head><body><svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 416 202\\">
<circle cx=\\"207.96\\" cy=\\"101.03\\" r=\\"100.71\\" fill=\\"#f67e83\\" fill-opacity=\\".2\\" paint-order=\\"markers fill stroke\\">
    <animate attributeName=\\"r\\" begin=\\"0.2s\\" dur=\\"0.5s\\" repeatCount=\\"1\\" values=\\"0 ; 100.71\\" fill=\\"freeze\\"/>
</circle>
<path fill=\\"none\\" stroke=\\"#d8232a\\" stroke-dasharray=\\"6 8\\" stroke-linecap=\\"round\\" d=\\"M-3.51 93.14c25.58-.3 52.63 3.88 84.7 28.71 32.04 24.82 60.31 43.8 91.3 53.09 30.98 9.3 92.75 15.9 126 6.4 33.26-9.5 44.62-24.47 47.4-32.95 2.77-8.47 6.86-22.71-16.07-33.96-19.1-9.36-35.22-12.18-58.3-19.72-23.08-7.54-34.1-39.08-2.57-51.4 41.16-16.1 95.78-27.43 152.25-35.23\\">
    <animate attributeName=\\"stroke-dashoffset\\" dur=\\"5s\\" repeatCount=\\"indefinite\\" values=\\"0 ; -140\\"/>
</path>
<path transform-origin=\\"204.08 170.55\\" transform=\\"scale(0)\\" fill=\\"#fff\\" stroke=\\"#d8232a\\" d=\\"M264.18 101.97a65.6 65.6 0 01-3.33 6.6l-.64 1.1c-.54.91-1.12 1.86-1.73 2.82l-.75 1.16c-.51.79-1.04 1.58-1.6 2.4l-.84 1.21-.88 1.24-.91 1.26-.94 1.27-.49.65-.99 1.3-1.02 1.32-1.05 1.33-1.08 1.35-1.12 1.37-1.14 1.38-1.18 1.4-1.2 1.4-1.24 1.42-1.27 1.44-1.3 1.45-1.33 1.46-1.36 1.48-1.38 1.48-1.42 1.5-1.45 1.5-1.48 1.52-.75.76-1.52 1.53-2.33 2.32-1.6 1.55-1.62 1.56-.82.78-1.66 1.57-1.7 1.57-1.71 1.58-1.75 1.59-1.77 1.59-1.8 1.59-1.84 1.6-1.85 1.6-1.88 1.59-2.38 1.99-2.13-2.8-1.7-2.2-1.66-2.17-1.64-2.12-1.62-2.08-1.6-2.04-2.34-2.99-1.53-1.94-1.5-1.9-1.48-1.88-1.45-1.83-1.42-1.8-1.4-1.76-1.38-1.73-.67-.85-1.34-1.68-1.3-1.64-1.28-1.61-1.26-1.58-1.22-1.55-1.2-1.51-1.17-1.49-1.14-1.45-1.12-1.42-1.08-1.4-1.06-1.36-1.03-1.33-1-1.31-.5-.64-.95-1.27-.47-.62-.91-1.22-.45-.6-.87-1.19-.43-.58-.83-1.15-.8-1.12-.77-1.09-.37-.54-.73-1.05-.7-1.04c-.45-.67-.88-1.34-1.3-1.99l-.6-.96a56.6 56.6 0 01-3.93-7.24c-16.33-34.84 5.9-62.06 58.52-67.99l1.6-.17c52.72-5.3 72.78 25.53 53.3 71.3zm-56.02-41.1c-10.22.53-18.65 6.86-18.84 14.13-.2 7.27 7.79 13.2 17.82 13.24 10.04.04 18.47-6.29 18.84-14.13.37-7.85-7.6-13.78-17.82-13.24z\\">
    <animateTransform attributeName=\\"transform\\" attributeType=\\"XML\\" type=\\"scale\\" values=\\"0 ; 0.4 ; 0.75 ; 1\\" dur=\\"0.7s\\" begin=\\"0.3s\\" repeatCount=\\"1\\" fill=\\"freeze\\"/>
</path>
</svg</body></html>",
              }
            }
            style={
              Array [
                Object {
                  "flex": 1,
                  "overflow": "hidden",
                },
                Object {
                  "backgroundColor": "#ffffff",
                },
                Object {
                  "backgroundColor": "transparent",
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
            useSharedProcessPool={true}
            useWebKit={false}
          />
        </View>
      </View>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": "#313131",
            "fontFamily": "DIN2014Narrow-Regular",
            "fontSize": 32,
            "marginHorizontal": 40,
            "paddingBottom": 16,
          }
        }
      >
        Wystąpił błąd
      </Text>
      <Text
        style={
          Object {
            "color": "#313131",
            "fontFamily": "DIN2014Narrow-Light",
            "fontSize": 24,
            "fontWeight": "800",
            "marginHorizontal": 40,
          }
        }
      >
        Przepraszamy...
      </Text>
    </View>
    <View
      style={
        Object {
          "marginHorizontal": 40,
        }
      }
    >
      <View
        style={
          Object {
            "height": 60,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          testID="error-boundary-reset-button"
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d8232a",
                "borderRadius": 50,
                "display": "flex",
                "height": "100%",
                "justifyContent": "center",
                "opacity": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "white",
                    "fontFamily": "DIN2014Narrow-Bold",
                    "fontSize": 20,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              SPRÓBUJ PONOWNIE
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
      <RNGestureHandlerButton
        collapsable={false}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        rippleColor={0}
        testID="error-boundary-restart-button"
      >
        <View
          accessible={true}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#33555555",
              "borderRadius": 90.57971014492753,
              "borderWidth": 1,
              "display": "flex",
              "height": 60,
              "justifyContent": "center",
              "marginBottom": 89.33035714285715,
              "marginTop": 29.776785714285715,
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#313131",
                "fontFamily": "DIN2014Narrow-Bold",
                "fontSize": 36.231884057971016,
                "textAlign": "center",
              }
            }
          >
            URUCHOM PONOWNIE APLIKACJĘ
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </View>
</RCTSafeAreaView>
`;
